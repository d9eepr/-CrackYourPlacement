class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i:nums){
            if(map.containsKey(i)){
                map.put(i,(map.get(i)) +1);
            }
            else
            map.put(i,1);
        }
        PriorityQueue<Pair<Integer,Integer>> pq = new PriorityQueue<>( (a, b) -> a.getValue() - b.getValue());
        for(Map.Entry<Integer,Integer> entry: map.entrySet()){
            pq.add(new Pair <>(entry.getKey(),entry.getValue()));
            if(pq.size()>k)
            pq.remove();
        }

        int [] ans = new int [k];

        for(int i=0;i<k;i++ )
            ans[i]=pq.remove().getKey();


        return ans;



    }
}

